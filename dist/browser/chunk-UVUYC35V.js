var r=Object.create;var m=Object.defineProperty,s=Object.defineProperties,t=Object.getOwnPropertyDescriptor,u=Object.getOwnPropertyDescriptors,v=Object.getOwnPropertyNames,j=Object.getOwnPropertySymbols,p=Object.getPrototypeOf,n=Object.prototype.hasOwnProperty,q=Object.prototype.propertyIsEnumerable,w=Reflect.get;var l=(a,b)=>(b=Symbol[a])?b:Symbol.for("Symbol."+a),x=a=>{throw TypeError(a)};var o=(a,b,c)=>b in a?m(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,A=(a,b)=>{for(var c in b||={})n.call(b,c)&&o(a,c,b[c]);if(j)for(var c of j(b))q.call(b,c)&&o(a,c,b[c]);return a},B=(a,b)=>s(a,u(b));var C=(a=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(a,{get:(b,c)=>(typeof require<"u"?require:b)[c]}):a)(function(a){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+a+'" is not supported')});var D=(a,b)=>{var c={};for(var d in a)n.call(a,d)&&b.indexOf(d)<0&&(c[d]=a[d]);if(a!=null&&j)for(var d of j(a))b.indexOf(d)<0&&q.call(a,d)&&(c[d]=a[d]);return c};var E=(a,b)=>()=>(b||a((b={exports:{}}).exports,b),b.exports);var y=(a,b,c,d)=>{if(b&&typeof b=="object"||typeof b=="function")for(let e of v(b))!n.call(a,e)&&e!==c&&m(a,e,{get:()=>b[e],enumerable:!(d=t(b,e))||d.enumerable});return a};var F=(a,b,c)=>(c=a!=null?r(p(a)):{},y(b||!a||!a.__esModule?m(c,"default",{value:a,enumerable:!0}):c,a));var G=(a,b,c)=>w(p(a),c,b);var H=(a,b,c)=>new Promise((d,e)=>{var f=g=>{try{i(c.next(g))}catch(k){e(k)}},h=g=>{try{i(c.throw(g))}catch(k){e(k)}},i=g=>g.done?d(g.value):Promise.resolve(g.value).then(f,h);i((c=c.apply(a,b)).next())}),z=function(a,b){this[0]=a,this[1]=b};var I=a=>{var b=a[l("asyncIterator")],c=!1,d,e={};return b==null?(b=a[l("iterator")](),d=f=>e[f]=h=>b[f](h)):(b=b.call(a),d=f=>e[f]=h=>{if(c){if(c=!1,f==="throw")throw h;return h}return c=!0,{done:!1,value:new z(new Promise(i=>{var g=b[f](h);g instanceof Object||x("Object expected"),i(g)}),1)}}),e[l("iterator")]=()=>e,d("next"),"throw"in b?d("throw"):e.throw=f=>{throw f},"return"in b&&d("return"),e};export{A as a,B as b,C as c,D as d,E as e,F as f,G as g,H as h,I as i};
